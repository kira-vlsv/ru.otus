plugins {
    id 'java'
    id 'checkstyle'
    id 'com.github.spotbugs' version '6.0.26'
    id 'io.freefair.lombok' version '8.4'
}

group = 'ru.otus'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.11.4'
    seleniumVersion = '4.25.0'
    webdriverManagerVersion = '5.9.2'
    assertjVersion = '3.26.3'
    guiceVersion = '7.0.0'
    cucumberVersion = '7.20.1'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(21))
    }
}

dependencies {
    // JUnit
    implementation "org.junit.jupiter:junit-jupiter:${junitVersion}"
    testImplementation "org.junit.platform:junit-platform-suite-api:1.11.4"

    // AssertJ
    implementation "org.assertj:assertj-core:${assertjVersion}"

    // Selenium
    implementation "org.seleniumhq.selenium:selenium-java:${seleniumVersion}"
    implementation "io.github.bonigarcia:webdrivermanager:${webdriverManagerVersion}"

    // Guice
    implementation "com.google.inject:guice:${guiceVersion}"

    // Cucumber
    implementation "io.cucumber:cucumber-java:${cucumberVersion}"
    implementation "io.cucumber:cucumber-guice:${cucumberVersion}"
    testImplementation "io.cucumber:cucumber-junit-platform-engine:${cucumberVersion}"

    implementation 'org.jsoup:jsoup:1.18.3'

    implementation "org.projectlombok:lombok:1.18.36"
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = "UTF-8"
    options.release.set(21)
}

checkstyle {
    toolVersion = '10.18.2'
    configFile = file("src/main/resources/checkstyle.xml")
}

spotbugs {
    toolVersion = '4.8.6'
    excludeFilter = file("${project.rootDir}/src/main/resources/excludeFilter.xml")
}

tasks.named("spotbugsMain").configure {
    reports {
        html.required.set(true)
        xml.required.set(false)
    }
}

tasks.named("spotbugsTest").configure {
    reports {
        html.required.set(true)
        xml.required.set(false)
    }
}

tasks.withType(Checkstyle).configureEach {
    reports {
        html.required.set(true)
        xml.required.set(false)
    }
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

tasks.register('cucumberCli', JavaExec) {
    dependsOn assemble, testClasses
    mainClass = "io.cucumber.core.cli.Main"
    classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
    args = ['--glue', 'otus', 'src/test/resources/otus']
    systemProperty 'browser', System.getProperty('browser', 'chrome')
    systemProperty 'browserVersion', System.getProperty('browserVersion', 'latest')
    systemProperty 'browserSize', System.getProperty('browserSize', '1920x1080')
    systemProperty 'baseUrl', System.getProperty('baseUrl', 'https://otus.ru')
}

tasks.named("cucumberCli") {
    dependsOn("checkstyleMain", "checkstyleTest", "spotbugsMain", "spotbugsTest")
}